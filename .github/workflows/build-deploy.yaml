name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Extract version and name from pom.xml
        id: extract
        run: |
          VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
          NAME=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='name']/text()" pom.xml)
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=name::$NAME"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository_owner }}/${{ steps.extract.outputs.name }}:${{ steps.extract.outputs.version }}

      - name: Trigger Deployment Workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: process.env.REPOSITORY_OWNER,
              repo: process.env.DEPLOYMENT_REPO,
              workflow_id: process.env.WORKFLOW_ID,
              ref: process.env.WORKFLOW_REF,
              inputs: {
                image_name: process.env.IMAGE_NAME,
                image_tag: process.env.IMAGE_TAG
              }
            });
        env:
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          DEPLOYMENT_REPO: "argocd-prod-flow-demo-deployment"
          WORKFLOW_ID: "trigger-deployment.yaml"
          WORKFLOW_REF: "main"
          IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ steps.extract.outputs.name }}
          IMAGE_TAG: ${{ steps.extract.outputs.version }}
