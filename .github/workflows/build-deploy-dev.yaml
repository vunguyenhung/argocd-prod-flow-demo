name: Build and Push Docker Image

on:
  push:
    branches:
      - feature**
      - hotfix**
      - bugfix**

jobs:
  prepare-next-version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump_version.outputs.new_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check and Bump Version
        id: bump_version
        run: |
          git fetch origin main
          CURRENT_VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
          if git diff origin/main -- pom.xml | grep -q '<version>'; then
            echo "Version already bumped."
            NEW_VERSION=$CURRENT_VERSION
          else
            echo "Version not bumped."
            MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
            MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
            PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          fi
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

  build-and-push:
    needs: [prepare-next-version]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Extract name from pom.xml
        id: extract_name
        run: |
          NAME=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='name']/text()" pom.xml)
          echo "name=$NAME" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository_owner }}/${{ steps.extract_name.outputs.name }}:${{ needs.prepare-next-version.outputs.new_version }}
